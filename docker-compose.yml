version: "3"

services:
  postgres_db:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres-src:/var/lib/postgresql/data
    networks:
      - app-net

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
     - '8080:8080'
    depends_on:
      - postgres_db
    networks:
      - app-net

  backend:
    build: ./backend_tools
    container_name: backend
    env_file:
      - .env
    restart: always
    ports:
      - "3001:3001"
    volumes:
      - backend-src:/app
    networks:
      - app-net

  # frontend:
  #   build: ./frontend_tools
  #   container_name: frontend
  #   restart: always
  #   depends_on:
  #     - backend
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - frontend-src:/app
  #   networks:
  #     - app-net

volumes:
  backend-src:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/Desktop/ft_transcendence/back_end/transcendence

  postgres-src:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/Desktop/ft_transcendence/postgres 

  frontend-src:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/Desktop/ft_transcendence//tempefrontend/chat

networks:
  app-net:
    driver: bridge
